# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches:
      - main
      - feature/*
      - fix/*
  pull_request:
    branches:
      - main
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        clean: true
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'
        preferLatestVersion: true
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0
    - name: Set default version
      run: echo "VERSION=${{ env.GitVersion_MajorMinorPatch }}.dev${{ env.GitVersion_BuildMetaData }}" >> $GITHUB_ENV
    - name: Set release version
      if: ${{ github.event.action == 'published' && !github.event.release.draft}}
      run:  TAG=$(git describe --tags); if github.event.release.prerelease; then RELEASE=".pre"; else  RELEASE="";  fi; echo "VERSION=${TAG}${RELEASE}" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    - name: Set up Python 3.7
      uses: actions/setup-python@v5
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox
    - name: Lint with flake8
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        tox run -e lint -- . --count --exit-zero --statistics

        #flake8 . --count --exit-zero --statistics
    - name: Execute Tests
      run: |
        tox run -e py37
    - name: Build
      run: |
        echo "${{ env.VERSION }}" > version.txt
        python -m pip install wheel
        python setup.py bdist_wheel
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Publish package
      if: ${{ github.event.action == 'published' && !github.event.release.draft}}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
